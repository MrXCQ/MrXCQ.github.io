{"meta":{"title":"恶魔熊攻城狮😈","subtitle":null,"description":"得知,吾幸.","author":"IMpBear","url":"http://www.impbear.cn"},"pages":[],"posts":[{"title":"","slug":"wait","date":"2019-03-11T10:02:08.428Z","updated":"2019-03-11T10:02:08.428Z","comments":true,"path":"2019/03/11/wait/","link":"","permalink":"http://www.impbear.cn/2019/03/11/wait/","excerpt":"","text":"SoftAP is now restarting! Please wait a moment and reconnect!","categories":[],"tags":[]},{"title":"","slug":"index","date":"2019-03-11T10:02:08.322Z","updated":"2019-03-11T10:02:08.324Z","comments":true,"path":"2019/03/11/index/","link":"","permalink":"http://www.impbear.cn/2019/03/11/index/","excerpt":"","text":"function onChangeSecType() { x=document.getElementById(\"sec\"); y=document.getElementById(\"pwd\"); y.style.display=\"block\"; } function onSubmitForm() { x=document.getElementById(\"Ssid\"); y=document.getElementById(\"pwd\"); z=document.getElementById(\"pwd_val\"); if(x.value.length>32) { alert(\\\"WIFI SSID is too long!(1-32)\\\"); return false; } /*if(!(/^[A-Za-z0-9]+$/.test(x.value)))\\ {\\ alert(\\\"WIFI SSID can only be [A-Za-z0-9]\\\");\\ return false;\\ }*/ if(y.style.display == \"block\") { if((z.value.length < 8)||(z.value.length>64)) { alert(\"Password length is between 8 to 64\"); return false; } } } body { text-align:center; font-family: 'Segoe UI'; } .wrapper { text-align:left; margin:0 auto; margin-top:200px; border:#000; width:500px; } .header { /*background-color:#CF9;*/ width: 500px; font-size:20px; line-height:50px; text-align:center; } .oneline { width:100%; margin-left: -50px; border-left:#FC3 10px; font-size:15px; height:30px; margin-top:3px; } .left { font-size:18px; /*background-color:#FF0;*/ line-height:30px; height:100%; width:40%; float:left; text-align: right; /*padding-left:30px;*/ } .right { margin-left:20px; font-size:18px; } .box { width:50%; height:30px; margin-left:20px; text-align:left; } .btn { /*background-color:#CF9;*/ height:40px; text-align:center; } .btn input { font-size:20px; height:40px; width:150px; border:0px; line-height:40px; margin-top:20px; border-radius:20px; background-color:#cf9;; } .btn input:hover{ cursor:pointer; background-color:#FB4044; } .foot { width: 500px; text-align:center; font-size:18px; line-height:20px; border:#CCC; margin-top: 10px; } #pwd { display:none; } Wifi Pen Config Wifi Wifi Pen Configuration Scan Wifi: \"wee fdds\" Password: Copyright &copy;chomptech.com","categories":[],"tags":[]},{"title":"","slug":"天猫精灵、小爱同学平台研究","date":"2018-12-18T10:27:53.000Z","updated":"2018-12-18T10:27:53.000Z","comments":true,"path":"2018/12/18/天猫精灵、小爱同学平台研究/","link":"","permalink":"http://www.impbear.cn/2018/12/18/天猫精灵、小爱同学平台研究/","excerpt":"","text":"天猫精灵 为了研究如何介入天猫精灵生态圈注册了独立开发者账号，个人账号主体所能开发的权限有以下几种： 语音开放者平台 硬件接入平台 行业解决方案 AR开发者平台 ###语音内容 因为账号主体角色权限的问题，在平台上只能看见 技能 功能模块，企业账号主体在论坛上看应该会有一个Iot 选项。个人理解技能这个功能是内容创作的含义，需要开发者自己去创作实体内容，审核上线后可以通过相关唤醒词进行在线语音识别。详细说明见☞平台对技能的解释 ###智能家居接入 天猫精灵蓝牙mesh软件基础规范,定义BLE Mesh通用模块的软件规范，指导模块厂家软件设计并接入天猫精灵。 BLE Mesh 通用模块的基本需求 BLE Mesh 通用模块的软件规范 #####云云自助接入模式,需要第三方的oAuth 授权接口 采用通用的OAuth2.0开放授权协议，可以让AliGenie在不获取合作方用户名和密码的前提下，访问用户授权的资源，协议规范可以访问OAuth2.0官方网站：https://oauth.net/2/PS：家居技能及自定义技能Oauth2.0需要配置的项含义一致，不区分家居和自定义技能 鉴权流程： AliGenie在开发商开放平台或者其他第三方平台注册一个应用，获取到相应的Client id 和Client secret AliGenie 应用向开发商OAuth2.0服务发起一个授权请求 开发商OAuth2.0服务向用户展示一个授权页面，用户可进行登陆授权 用户授权AliGenie客户端应用后，进行回跳到AliGenie 的回调地址上并带上code相关参数 AilGenie回调地址上根据code会去合作方Oauth 的服务上换取 access_token 通过access_token，天猫精灵设备控制时通过该access_token进行访问合作方的服务 ###设备认证指南 背景 天猫精灵是阿里巴巴人工智能实验室推出的AI智能产品品牌。天猫精灵内置AliGenie操作系统，AliGenie生活在云端，它能够听懂中文普通话语音指令，目前可实现智能家居控制、语音购物、手机充值、叫外卖、音频音乐播放等功能，带来人机交互新体验。依靠阿里云的机器学习技术和计算能力，AliGenie能够不断进化成长，了解使用者的喜好和习惯，成为人类智能助手。 AliGenie开发者平台是由阿里巴巴人工智能实验室发起的，面向企业/机构/创业者/开发者，将阿里巴巴在人工智能领域积累的技术以API或SDK等形式对外共享的在线平台。AliGenie开发者平台主要包括三大部分：精灵技能市场、硬件开放平台、行业解决方案，全面赋能智能家居、新制造、新零售、酒店、航空等服务场景。开发者平台是主要面向四种类型的开发者，内容开发者、应用开发者、智能家居开发商和硬件生产商，开发者既可以创建技能，为更多的语音用户提供服务，也可以将自己的设备接入云端服务，获取语音交互能力。 需求 智能家居设备可接入天猫精灵，实现对家居设备的开关和其他功能的语音智能控制，例如灯光效果，调节温度等。但智能家居设备的产品质量参差不齐。为了确保接入天猫精灵的智能家居设备质量水平较高，互联互通性能优良，用户体验感较好，避免出现质量和安全等方面的问题，需要对智能家居设备的质量及其制造商进行管控。 智能设备认证具体流程详见 官网文档 。 ###硬件接入平台 AliGenie硬件接入开放平台（AliGenie Intelligent Devices Platform），是AliGenie为企业级用户提供AI语音解决方案的开放平台。相关企业用户可以在完成开发者认证后，通过平台来申请获取AliGenie SDK、模组、麦克风阵列等能力和技术支持。 开发平台主要包括4大块内容，设备研发部分是厂商接入的基本流程，APP开发是厂商提供app接入的能力，服务部分是可以提供的基本服务，私有领域是用户的自定义和定制化的技能应用。 硬件相关详见 天猫精灵 官网文档 。","categories":[],"tags":[]},{"title":"用户隐私政策协议","slug":"Privacy_CN","date":"2018-10-19T01:57:05.000Z","updated":"2018-10-19T01:58:03.000Z","comments":true,"path":"2018/10/19/Privacy_CN/","link":"","permalink":"http://www.impbear.cn/2018/10/19/Privacy_CN/","excerpt":"","text":"特别提醒： 除非您已阅读并接受本协议所有条款，否则您无权下载、安装或使用IMpBear 相关软件（以下称“本软件”）及相关服务。您的下载、安装、使用等行为即视为您已阅读并同意上述协议的约束。须注册方能使用的模块可能存在单独协议。请您务必审慎阅读、充分理解各条款内容，特别是免责或者限制责任的条款，并选择是否接受。限制、免责条款将会以黑体加粗形式提示您注意。 如果您未满18周岁，请在法定监护人的陪同下阅读本协议及其他上述协议。 一、服务内容 二、软件安装和使用 您理解并同意：为了向您提供有效的服务，本软件会利用您移动通讯终端的网络资源。本软件使用过程中可能产生数据流量的费用，用户需自行向运营商了解相关资费信息，并自行承担相应费用。 本公司许可您为非商业目的在单一终端设备上安装、使用、显示、运行、更新本软件，此项许可不可转让，且具非排他性。您可以直接从IMpBear的网站上获取本软件，也可以从本公司授权的第三方获取。如果您从未经本公司授权的第三方获取本软件或与本软件名称相同的安装程序，本公司无法保证该软件的正常使用，并对因此给您造成的损失不予负责。 本公司为不同的移动终端设备开发了不同的软件版本，您应当根据实际情况选择下载合适的版本进行安装。由于您未正确安装合适版本所带来的风险及损失，本公司不承担任何责任。 您充分了解并同意，您会按照合法方式使用本软件，不会利用本软件从事违反法律法规、政策及公序良俗、社会公德等的行为。本公司有权依合理判断对违反有关法规或本协议规定的行为进行处罚（包括但不限于停用、注销账号，删除评论等），对违法违规的任何用户采取适当的法律行动，并依据法律法规保存有关信息向有关部门报告等，用户应独自承担由此而产生的一切法律责任。 三、知识产权保护 本软件用的所有注册和未注册的权利，包括著作权、专利权、外观设计和商标权，均属于本公司所有。 除非法律允许或本公司书面许可，您不得从事下列行为： （1）删除本软件及其副本上关于著作权的信息 （2）对本软件进行反向工程、反向汇编、反向编译，或者以其他方式尝试发现本软件的源代码 （3）通过修改或伪造软件运行中的指令、数据，增加、删减、变动软件的功能或运行效果， 将用于上述用途的软件、进行运营或向公众传播，无论这些行为是否为商业目的 （4）使用插件、外挂或非IMpBear经授权的第三方工具/服务接入本软件和相关系统的类似行为 （5）未经本公司明示授权的其他行为。 四、隐私保护 本公司尊重并保护所有用户的个人隐私权，以下信息，除非经您亲自许可，或提供该服务所必须（例如本软件的特别服务可能需要分享您的位置信息）或根据相关法律法规、司法机关的强制性规定须披露外，本公司不会主动的泄露、转让、提供给第三方： a) 在您注册“IMpBear”账号时，您根据“IMpBear”要求提供的个人注册信息； b) 在您使用“IMpBear”网络服务，或访问“IMpBear”平台网页时，“IMpBear”自动接收并记录的您的浏览器和计算机上的信息，包括但不限于您的IP地址、浏览器的类型、使用的语言、访问日期和时间、软硬件特征信息及您需求的网页记录等数据； c) “IMpBear”通过合法途径从商业伙伴处取得的用户个人数据； d）您的位置信息； 您了解并同意，以下信息不适用本隐私权政策： a) 您在使用“IMpBear”平台提供的搜索服务时输入的关键字信息； b) “IMpBear”收集到的您在“IMpBear”发布的有关信息数据，包括但不限于参与活动、成交信息及评价详情； 为改进服务质量及满足用户个性化需求，本公司会使用获取的信息进行必要的数据分析，并以此为基础，提供更好的服务或定制服务。本公司可能通过使用您的个人信息，向您提供您感兴趣的信息，包括但不限于向您发出产品和服务信息，或者与“IMpBear”合作伙伴共享信息以便他们向您发送有关其产品和服务的信息（后者需要您的事先同意）。 您理解并同意，您应加强信息安全及个人信息的保护意识，注意密码保护，并在发现泄漏后立即联系“IMpBear”客服，以便减少损失。由于您的自身行为（例如下载了含病毒的软件、自行泄露密码）、黑客攻击（例如植入病毒）或不可抗力等情形，导致上述可能涉及您隐私或您认为是私人信息的内容发生被泄露、披露，或被第三人获取、使用、转让等情形的，均由您自行承担不利后果，本公司对此不承担任何责任。 维护软件安全与正常使用是本公司和您的共同责任，本公司将按照法定标准及行业标准合理审慎的采用必要技术措施保护您移动终端设备的信息和数据安全，但是您承认和同意本公司不能就此提供任何保证。 五、第三方软件或技术 本软件可能会使用第三方软件或技术（例如地图模块数据可能来自地图软件），这种使用已经获得合法授权。 本软件如果使用了第三方的软件或技术，第三方软件如有相关用户协议，则与本协议具有同等的法律效力，如有矛盾，以本协议为准。您应当遵守这些要求。如果您没有遵守这些要求，该第三方或者国家机关可能会对您提起诉讼、罚款或采取其他制裁措施，并要求本公司给予协助，您应当自行承担法律责任。 如因本软件使用的第三方软件或技术引发的任何纠纷，应由该第三方负责解决，本公司不承担任何责任。本公司不对第三方软件或技术提供客服支持，若您需要获取支持，请与第三方联系。 六、其他免责条款 您充分了解并同意，本软件内公交路线、实时公交信息等数据系IMpBear运用一定技术手段对有关数据进行处理所得结果，本公司尽量保证所取得、处理的数据具有合法性、真实性和及时性。但因原始数据、现有技术的局限性以及其他不可预料的因素，本软件公布的信息及数据可能在一定范围内存在误差，您需要对您使用本软件及服务所查询的结果自行加以判断，并承担因使用该内容而引起的相关风险。本公司不会对因前述风险导致的任何损失承担责任。 您充分了解并同意，由于信息网络设备维护、信息网络连接故障、智能终端、通讯或其他系统的故障、电力设备、罢工、劳动争议、暴乱、起义、骚乱、火灾、洪水、风暴、爆炸、战争、政府行为、司法行政机关的命令、其他不可抗力或第三方的不作为等因素可能会造成本软件不能服务或迟延服务，本公司不会为此承担任何赔偿责任。 您充分理解并同意，由于您的自身行为（例如下载了含病毒的软件）、黑客攻击（例如软件被植入病毒）或不可抗力等情形，导致您产生各种直接和间接损失（包括但不限于银行账户被盗或转移）均由您自行承担不利后果，本公司对此不承担任何责任。 七、其他 本公司有权在必要时修改本协议条款。您可以在本协议的最新版本中查阅相关协议条款。本协议条款变更后，如果您继续使用本软件，即视为您已接受修改后的协议。如果您不接受修改后的协议，应当停止使用本软件。 本协议所有条款的标题仅为阅读方便，本身并无实际涵义，不能作为本协议涵义解释的依据。","categories":[],"tags":[]},{"title":"iOS-静态库SDK .a静态库的制作","slug":"iOS-静态库SDK---a静态库的制作-","date":"2018-10-12T08:38:25.000Z","updated":"2018-10-12T08:42:02.000Z","comments":true,"path":"2018/10/12/iOS-静态库SDK---a静态库的制作-/","link":"","permalink":"http://www.impbear.cn/2018/10/12/iOS-静态库SDK---a静态库的制作-/","excerpt":"","text":"简介 什么是库？库是程序代码的集合，是共享程序代码的一种方式根据源代码的公开情况，库可以分为 2 种类型 开源库公开源代码，能看到具体实现比如 SDWebImage 、 AFNetworking 闭源库不公开源代码，是经过编译后的二进制文件，看不到具体实现主要分为：静态库、动态库 静态库和动态库 静态库和动态库的存在形式静态库： .a 和 .framework动态库： .dylib 和 .framework 下面开始介绍.a 库的制作过程 1、新建一个静态库工程简介 什么是库？库是程序代码的集合，是共享程序代码的一种方式根据源代码的公开情况，库可以分为 2 种类型 开源库公开源代码，能看到具体实现比如 SDWebImage 、 AFNetworking 闭源库不公开源代码，是经过编译后的二进制文件，看不到具体实现主要分为：静态库、动态库 静态库和动态库 静态库和动态库的存在形式静态库： .a 和 .framework动态库： .dylib 和 .framework 下面开始介绍.a 库的制作过程 1、新建一个静态库工程 2、添加静态库所包含的源代码： 3、编写需要公开的头文件和代码方法： 需要将公开的头文件拖至Public 分类中： 4、分别在模拟器和真机上编译，待.a 文件从红色变为白色 show in finder 5、合并.a 库 合并完成后会在工程文件路径下发现一个 libStaticLibChomp.a 静态库文件 这个成功合并的.a 库就是最终可以使用的静态库，将.a 库 公开的头文件拖入工程即可","categories":[],"tags":[]},{"title":"我的第一篇博客","slug":"firstBlog","date":"2018-06-22T07:14:55.000Z","updated":"2018-06-22T09:22:45.000Z","comments":true,"path":"2018/06/22/firstBlog/","link":"","permalink":"http://www.impbear.cn/2018/06/22/firstBlog/","excerpt":"","text":"iOS开发的工作进入了第四个年头，经验上都有了一定的积累，以后都会系统的整理所学所想，为以后能够更好的的查漏补缺。简书地址. GitHub。之前一直都是使用object-c 作为主要语言开发iOS，最近也在学习swift，整个历程也会记录下来。swift_excise swift 基础语法元组123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215/*** 元组* 在其他语言中很早就有元组这个概念 但是对于OC 语言来说是一个新的概念* 将多个相同或者不同类型的值用一个小括号就是一个元组*/let person = (\"IMpbear\",24,171.0)print(\"name -- \\(person.0),age -- \\(person.1),height --- \\(person.2)\")/*** 元组其实和结构体很像 只是不需要定义类型，如果没有定义类型元组会是神马类型呢？* 元组其实是组合类型 括号内部可以写任意类型**/let person1:(String,Int,Double) = (\"Tom\",22,178)// 元组的其他定义方式 指明应用元组元素的名称let person2 = (name:\"Tuko\",age:23,height:175.6)print(\"name -- \\(person2.0),age -- \\(person2.1),height --- \\(person2.2)\")/*** 元组的其他定义方式* 通过指定的名称提取元组对应的值 ，会将对应位置的值赋值给对应位置的名称**/let (name,age,height) = (\"zc\",22,171)print(name,age,height)/*** 如果不关心元祖中某一个值可以利用_ 通配符来忽略提取*/let (name1,age1,_) = (\"hello\",22,123.3)print(name1,age1)// 没有元组之前C和OC 是通过传入指针或者结构体的方式来返回多个值，而有了元组就可以实现一个函数返回多个值/**** 元组的定义 ****/// 一元元组 会将编译器优化为其实际元素的类型。var t1 : (String) = (\"字符串\")// 直接等同于 var t1 ：String = \"我是字符串\"// 可以缺省类型 var t1 = “我是字符串”// PS ： 由于t1 实际类型为String 类型，因此访问t1.0 的访问会报错//MARK:元组支持嵌套var T_t :(String ,(String,Int)) = (\"外层元组\",(\"内层元组\",66))print(T_t.0,T_t.1.0)//可以将元组的类型重定义为一个类型名typealias yuanZuName = (first:String,second:String,third:String)let name2:yuanZuName = (\"1\",\"2\",\"3\")print(\"元组重定义 --- \\(name2.first,name2.second,name2.third)\")//MARK: 元组的数据访问// 当元素未命名时 采用自然顺序访问 序号从0 开始var t2 = (\"熊哥 \",23)var y1 = t2.0var y2 = t2.1print(\"元组数据访问 name -- \\(y1),age --- \\(y2)\")// 当元素命名时，可以使用命名访问数据，当然可以使用序号进行访问var y3 = (name : \"impbear\",age : 24)y1 = y3.namey2 = y3.ageprint(\"元组数据访问 name -- \\(y3.name),age --- \\(y3.age)\")// 可以用多个变量同事进行访问var (name3,age3) = y3 // 同时获取name agevar (name4,_) = y3 // 不需要时参数可以缺省// 另外注意 元组类型为数值类型 因此元组的拷贝是值拷贝var t5_copy = y3y3.name = \"dmxy\"print(t5_copy.name)//MARK:关于数组的访问级别/*** 元组的访问级别取决于他包含的元素，比如元组里的元素都是private 私有级别的，那该元组也是私有级别的* 遵循最小的原则，也就是说如果一个元祖中有两个元素 一个为private 另一个为public 那个该元组最小原则为private 私有**///MARK:元组数据的修改 值可以修改 数据类型无法修改，但是如果指定数据类型为Any 这种情况可以改变类型var y4 = (name:\"XCQ\",age:24)y4.age = 25print(\"y4age --- \\(y4.age)\") //25y4.age = 27print(\"y4age --- \\(y4.age)\") //27//y4.age = \"sdf\" 报错!var y5 :(String,Any) = (\"ddfd\",2323)y5.0 = \"iddi\"y5.1 = \"Any改变类型\"print(\"any0 --\\(y5.0),any1 --\\(y5.1)\")//MARK:元组与Array ，dictionary 组合嵌套// 数组嵌套元组var yzArray:[(Int,String)] = [(12,\"1\"),(13,\"2\"),(14,\"3\")]print(yzArray[0].1)// 字典嵌套元组var yzDict:[String:(String,Int)] = [\"xcq\":(\"boy\",24),\"cy\":(\"girl\",24)]print(\"字典嵌套元组 ---\\(yzDict)\")//MARK:元组常见的使用场景//非常适用于字典的遍历var airports: [String:String] = [\"YYZ\": \"toronto\", \"DUB\": \"Dublin\"]for (airCode,airName) in airports &#123;print(\"code -- \\(airCode),name --- \\(airName)\")&#125;//非常受用于数组Array 的遍历var shoppingList = [\"eggs\",\"milk\"]for (sindex , svalue) in shoppingList.enumerated() &#123;print(\"index -- \\(sindex),value --- \\(svalue)\")&#125;// 适合函数返回可选元组，即可以返回nilfunc userInfoFunc() -&gt;(String,Int)? &#123;return (\"dd\",22)// return nil&#125;// 函数返回也可以部分元素可选func userInfoFunc2() -&gt;(String?,Int)&#123;return (nil,22)&#125;// 甚至可以用来给函数传递多元参数// 定义一个函数 有Number 和 text 两个参数func doSomething(number:Int,text:String)&#123;print(\"\\(number) : \\(text)\")&#125;// 正常调用方式doSomething(number: 56, text: \"477878\")//元祖调用方式let testYz = (53, \"ddd\")doSomething(number: testYz.0, text: testYz.1)//MARK:高级示例//模拟情绪数据var emojis : [(type: String,strength: Int)] = [(\"happy\",0),(\"sad\",1),(\"cry\",2),(\"amazing\",3),(\"scared\",4),(\"tender\",5),(\"shy\",6)]// 遍历数据 情绪为happy 的时候 strnegth + 1for (index,emoji) in emojis.enumerated() &#123;if emoji.type == \"happy\"&#123;emojis[index] = (type: emoji.type, strength : index + 1)&#125;&#125;print(emojis)//高级用法emojis = emojis.map &#123;emo inif emo.type == \"happy\"&#123;return (type: emo.type , strength : emo.strength + 1 )&#125;else&#123;return emo&#125;&#125;print(emojis)emojis = emojis.map(&#123;ss inif ss.type == \"happy\"&#123;return (type: ss.type , strength : ss.strength + 1 )&#125;else&#123;return ss&#125;&#125;)//let numbers = [1,2,5,4,3,6,8,7]//var sortNumbers = numbers.sorted(by: &#123;$0 &lt; $1&#125;)//print(\"numbers -\" + \"\\(sortNumbers)\")","categories":[],"tags":[]}]}